
package questionmodel;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserName", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetUserName")
    @ResponseWrapper(localName = "getUserNameResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetUserNameResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getUserNameRequest", output = "http://QuestionModel/QuestionWS/getUserNameResponse")
    public String getUserName(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @return
     *     returns java.util.List<questionmodel.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestion")
    @ResponseWrapper(localName = "getQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionRequest", output = "http://QuestionModel/QuestionWS/getQuestionResponse")
    public List<Question> getQuestion();

    /**
     * 
     * @param name
     * @param topic
     * @param id
     * @param accessToken
     * @param content
     * @param email
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "insQuestion", targetNamespace = "")
    @RequestWrapper(localName = "insertQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.InsertQuestion")
    @ResponseWrapper(localName = "insertQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.InsertQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/insertQuestionRequest", output = "http://QuestionModel/QuestionWS/insertQuestionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionModel/QuestionWS/insertQuestion/Fault/Exception")
    })
    public int insertQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content,
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws Exception_Exception
    ;

    /**
     * 
     * @param uid
     * @param topic
     * @param accessToken
     * @param qid
     * @param content
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "updQuestion", targetNamespace = "")
    @RequestWrapper(localName = "updateQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.UpdateQuestion")
    @ResponseWrapper(localName = "updateQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.UpdateQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/updateQuestionRequest", output = "http://QuestionModel/QuestionWS/updateQuestionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionModel/QuestionWS/updateQuestion/Fault/Exception")
    })
    public int updateQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content)
        throws Exception_Exception
    ;

    /**
     * 
     * @param accessToken
     * @param qid
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "delQuestion", targetNamespace = "")
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/deleteQuestionRequest", output = "http://QuestionModel/QuestionWS/deleteQuestionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionModel/QuestionWS/deleteQuestion/Fault/Exception")
    })
    public int deleteQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "qid", targetNamespace = "")
        int qid)
        throws Exception_Exception
    ;

    /**
     * 
     * @param qId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAnswerCount", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetAnswerCount")
    @ResponseWrapper(localName = "getAnswerCountResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetAnswerCountResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getAnswerCountRequest", output = "http://QuestionModel/QuestionWS/getAnswerCountResponse")
    public int getAnswerCount(
        @WebParam(name = "q_id", targetNamespace = "")
        int qId);

    /**
     * 
     * @param qId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQVoteByQID", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQVoteByQID")
    @ResponseWrapper(localName = "getQVoteByQIDResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQVoteByQIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQVoteByQIDRequest", output = "http://QuestionModel/QuestionWS/getQVoteByQIDResponse")
    public int getQVoteByQID(
        @WebParam(name = "q_id", targetNamespace = "")
        int qId);

    /**
     * 
     * @param qid
     * @return
     *     returns questionmodel.Question
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionByQID", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionByQID")
    @ResponseWrapper(localName = "getQuestionByQIDResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionByQIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionByQIDRequest", output = "http://QuestionModel/QuestionWS/getQuestionByQIDResponse")
    public Question getQuestionByQID(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param accessToken
     * @param qId
     * @param value
     * @return
     *     returns int
     * @throws ParseException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.VoteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/voteQuestionRequest", output = "http://QuestionModel/QuestionWS/voteQuestionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://QuestionModel/QuestionWS/voteQuestion/Fault/ParseException"),
        @FaultAction(className = IOException_Exception.class, value = "http://QuestionModel/QuestionWS/voteQuestion/Fault/IOException")
    })
    public int voteQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "q_id", targetNamespace = "")
        int qId,
        @WebParam(name = "value", targetNamespace = "")
        int value)
        throws IOException_Exception, ParseException_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserID", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetUserID")
    @ResponseWrapper(localName = "getUserIDResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetUserIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getUserIDRequest", output = "http://QuestionModel/QuestionWS/getUserIDResponse")
    public int getUserID(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserEmail", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetUserEmail")
    @ResponseWrapper(localName = "getUserEmailResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetUserEmailResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getUserEmailRequest", output = "http://QuestionModel/QuestionWS/getUserEmailResponse")
    public String getUserEmail(
        @WebParam(name = "token", targetNamespace = "")
        String token);

}
